# -*- coding: utf-8 -*-


def index():
    s = [('all','全部')]
    s.extend([(d.id,'%s (%s)' %(d.dsName,d.cookieDomain)) for d in lda_db(lda_db.dataSource.account_id == session.user.id).select()])
    btn = INPUT(_value='搜索',_type='submit',_id='sub')
    form = SQLFORM.factory(Field('name', requires=IS_NOT_EMPTY()),
                                                      Field('source',requires=IS_IN_SET(s)),
                                                      buttons = [btn]
                  )
    if form.accepts(request, session):
        response.flash = 'data accepted'
    elif form.errors:
        response.flash = 'form has errors'
    else:
        response.flash = 'please fill the form -> %s' %session.user
    return dict(form=form, panelTitle='标签项目管理')

def new():
    dataSource = lda_db(lda_db.dataSource.account_id==session.user.id).select()
    options = [(ds.id, '%s (%s)' %(ds.dsName,ds.cookieDomain)) for ds in dataSource]
    btn = INPUT(_type='submit', _value='保存',_id='sub')
    form = SQLFORM.factory(Field('name', requires=IS_NOT_EMPTY()),
                                                      Field( 'source', requires = IS_IN_SET(options)),
                                                      buttons = [btn]
                )

    if form.accepts(request, session):
        r = lda_db.tagProj.insert(account_id=session.user.id, dataSource_id=form.vars.dataSource, tpName=form.vars.name)
        lda_db.executesql('CREATE TABLE Tag_%s (ds_id int, ti_id int, primary key (ds_id)) engine=MyISAM DEFAULT CHARSET=utf8' %r)
        lda_db.executesql('CREATE TABLE TagItem_%s (ti_id int, count int, value varchar(45), date datetime, primary key (ti_id)) engine=MyISAM DEFAULT CHARSET=utf8' %r)
        lda_db.define_table('Tag_%s' %r, Field('ds_id','id'),Field('ti_id','integer'))
        lda_db.define_table('TagItem_%s' %r, Field('ti_id','id'), Field('value'), Field('date','datetime'))
        #response.flash = 'data accepted -> %s' %0
    elif form.errors:
        response.flash = 'form has errors'
    else:
        response.flash = 'please fill the form -> %s' %options

    return dict(form=form)


def sync():
    response.flash = '%s' %session.user
    # test 
    dsId = 1
    projId = 1
    tagProj = lda_db(lda_db.tagProj.id==projId).select().first()
    session.tagProj = tagProj
    ds = lda_db(lda_db.dataSource.id==dsId).select().first()
    session.dataSource = ds
    counted = lda_db.executesql('SELECT count(ds_id) FROM Tag_%s' %projId)[0][0]
    allCount = lda_db.executesql('SELECT count(ds_id) FROM DS_%s' %dsId)[0][0]
    btn = INPUT(_value='上传已标记的cookie数据', _type='submit', _id='sub')
    import os
    cvs_form = SQLFORM.factory( Field('filename', 'upload',uploadfolder=os.path.join(request.folder,'uploads')),
                                                               buttons = [btn]
                  )
    if cvs_form.accepts(request, formname='cvs_form'):
        response.flash = 'file upload: %s' %cvs_form.vars
        if cvs_form.vars.filename:
            p = os.path.join(request.folder,'uploads')
            response.flash = p+cvs_form.vars.filename
            os.rename(os.path.join(p,cvs_form.vars.filename), os.path.join(p,'test.zip'))
    else:
        response.flash = 'error'
    return dict(form=cvs_form, tagProjName=tagProj.tpName, 
                          dataSource='%s (%s)' %(ds.dsName,ds.cookieDomain),
                          counted=counted, noCount=allCount-counted)


def downAll():
    import os
    filename = 'test.txt'
    path = os.path.join(request.folder, 'private', filename)
    response.headers['Content-type'] = 'application/octet-stream'
    response.headers['Content-Disposition'] = 'attachment; filename=%s' %filename
    return response.stream(open(path), chunk_size=4096)


def downIncr():
    import os
    filename = 'incr.txt'
    path = os.path.join(request.folder, 'private', filename)
    response.headers['Content-type'] = 'application/octet-stream'
    response.headers['Content-Disposition'] = 'attachment; filename=%s' %filename
    return response.stream(open(path), chunk_size=4096)
