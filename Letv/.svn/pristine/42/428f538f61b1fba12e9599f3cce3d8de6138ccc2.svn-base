#coding:utf8


LIMIT = 10
def index():
    tag_num = 4
    tag_class = 30
    history = ['2014-02-11','45']
    breadcrumb = ['首页']
    return dict(breadcrumb = breadcrumb,tag_num = tag_num,tag_class = tag_class,history =history)

def tagManage():
    breadcrumb = ['标签管理']
    bigClass = [(name.l_id,name.className) for name in letv_db(letv_db.class_type == "B").select(letv_db.lableClass.l_id,letv_db.lableClass.className) ]
    midClass = [(name.l_id,name.className) for name in letv_db(letv_db.class_type == "M").select(letv_db.lableClass.l_id,letv_db.lableClass.className) ]
    btn = INPUT(_value='搜索',_type='submit',_id='subt')
    form = form = SQLFORM.factory(
                                  Field('name',requires =  IS_NOT_EMPTY()),
                                  Field('big',requires = IS_IN_SET(bigClass)),
                                  Field('mid',requires = IS_IN_SET(midClass)),
                                  buttons = [btn]
                                  )
    csdn =()
    if form.accepts(request, session):
        if  request.vars.name:
            csdn  = csdn & (letv_db.tagSource.tagName == request.vars.name)
            dataCount = letv_db(csdn).count()
            pagCount  = int(math.ceil(dataCount / LIMIT))
        if  request.vars.big:
            csdn = csdn & (letv_db.tagSource.bigClass_id == request.vars.big)
            dataCount = letv_db(csdn).count()
            pagCount  = int(math.ceil(dataCount / LIMIT))
        if request.vars.mid:
            csdn = csdn & (letv_db.tagSource.midClass_id == request.vars.mid)
            dataCount = letv_db(csdn).count()
            pagCount  = int(math.ceil(dataCount / LIMIT))
    count = letv_db().count(letv_db.tagSource.id)
    pagCount  = int(math.ceil(count / LIMIT))
    data = letv_db(csdn).select(orderby = letv_db.tagSource.t_id,limitby=(0,LIMIT))
    return dict(form = form ,data = data,pagCount = pagCount,breadcrumb = breadcrumb,count = count)

def splitPage():
    tagCount = (int(request.vars.count) - 1) * LIMIT
    csdn =()
    if  request.vars.name:
            csdn  = csdn & (letv_db.tagSource.tagName == request.vars.name)
    if  request.vars.big: 
            csdn = csdn & (letv_db.tagSource.l_id == request.vars.big)
    if request.vars.mid:
            csdn = csdn & (letv_db.tagSource.l_id == request.vars.mid)
    data = letv_db(csdn).select(orderby = letv_db.tagSource.t_id,limitby=(tagCount,tagCount + LIMIT))
    import gluon.contrib.simplejson
    return response.json(dict(data = data))


        
def  tagEdit():
    print request.vars
    breadcrumb = ['标签管理','新增标签']
    '''
    bigData = ([(items.l_id,items.bigName) for items in letv_db().select(letv_db.bigClass.bigName,letv_db.bigClass.l_id,orderby = letv_db.bigClass.l_id)])
    midData = ([(items.cr_id,items.midName) for items in letv_db().select(letv_db.midClass.midName,letv_db.midClass.cr_id,orderby = letv_db.midClass.cr_id)])
    choseData = ['','','','']
    
    btn = INPUT(_value='保存',_type='submit',_id='subt')
    form = SQLFORM.factory(
                                  Field('tagname',requires =  IS_NOT_EMPTY()),
                                  Field('big_name',requires = IS_IN_SET(bigData)),
                                  Field('mid_name',requires = IS_IN_SET(midData)),
                                  buttons = [btn]
                                  )
    '''
    return dict(breadcrumb = breadcrumb)
      


